#!/usr/bin/env bash

appDir="$(pwd)"
bpDir="$(cd $(dirname $0)/..; pwd)" # absolute path
layersDir="${1:?}"

source "${bpDir}/lib/v3/common.sh"
source "${bpDir}/lib/v3/buildpack.sh"
source "${bpDir}/lib/jvm.sh"

status "JVM buildpack"

# fail hard
set -o pipefail
# fail harder
set -eu

# TODO check the build plan to see if another JDK has already been installed?

jdkVersion="$(get_jdk_version "${appDir}")"
info "Installing JDK ${jdkVersion}"

jdkUrl="$(get_jdk_url "${jdkVersion}")"

jdkCacheId="$(get_jdk_cache_id "${jdkUrl}")"

jdkMetadata=$(cat <<EOF
version = "${jdkVersion}"
cache_id = "${jdkCacheId}"
EOF
)

jdkLayerToml="$(bp_layer_metadata_create "false" "true" "true" "${jdkMetadata}")"

if bp_layer_rebuild? "${layersDir}" "jdk" "${jdkLayerToml}"; then
  jdkLayer="$(bp_layer_init "${layersDir}" "jdk" "${jdkLayerToml}")"

  install_jdk "${jdkVersion}" "${jdkUrl}" "${jdkLayer}"
  install_certs "${jdkLayer}"
  install_profile "${bpDir}" "${jdkLayer}/profile.d"
  install_jdk_overlay "${jdkVersion}" "${jdkLayer}" "${appDir}"

  jreLayerToml="$(bp_layer_metadata_create "true" "false" "false" "${jdkMetadata}")"
  if bp_layer_rebuild? "${layersDir}" "jre" "${jreLayerToml}"; then
    info "Installing JRE ${jdkVersion}"
    jreLayer="$(bp_layer_init "${layersDir}" "jre" "${jreLayerToml}")"
    install_jre "${jdkLayer}" "${jreLayer}"
  fi
fi